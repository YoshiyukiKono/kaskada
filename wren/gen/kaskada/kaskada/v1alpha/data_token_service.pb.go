// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0-devel
// 	protoc        (unknown)
// source: kaskada/kaskada/v1alpha/data_token_service.proto

package kaskadav1alpha

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataTokenId string `protobuf:"bytes,1,opt,name=data_token_id,json=dataTokenId,proto3" json:"data_token_id,omitempty"`
	// map of table-id to table-version
	TableVersions map[string]int64 `protobuf:"bytes,2,rep,name=table_versions,json=tableVersions,proto3" json:"table_versions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// The creation timestamp of the dataToken in kaskada
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *DataToken) Reset() {
	*x = DataToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kaskada_kaskada_v1alpha_data_token_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataToken) ProtoMessage() {}

func (x *DataToken) ProtoReflect() protoreflect.Message {
	mi := &file_kaskada_kaskada_v1alpha_data_token_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataToken.ProtoReflect.Descriptor instead.
func (*DataToken) Descriptor() ([]byte, []int) {
	return file_kaskada_kaskada_v1alpha_data_token_service_proto_rawDescGZIP(), []int{0}
}

func (x *DataToken) GetDataTokenId() string {
	if x != nil {
		return x.DataTokenId
	}
	return ""
}

func (x *DataToken) GetTableVersions() map[string]int64 {
	if x != nil {
		return x.TableVersions
	}
	return nil
}

func (x *DataToken) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type GetDataTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataTokenId string `protobuf:"bytes,1,opt,name=data_token_id,json=dataTokenId,proto3" json:"data_token_id,omitempty"`
}

func (x *GetDataTokenRequest) Reset() {
	*x = GetDataTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kaskada_kaskada_v1alpha_data_token_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataTokenRequest) ProtoMessage() {}

func (x *GetDataTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kaskada_kaskada_v1alpha_data_token_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataTokenRequest.ProtoReflect.Descriptor instead.
func (*GetDataTokenRequest) Descriptor() ([]byte, []int) {
	return file_kaskada_kaskada_v1alpha_data_token_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetDataTokenRequest) GetDataTokenId() string {
	if x != nil {
		return x.DataTokenId
	}
	return ""
}

type GetDataTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataToken *DataToken `protobuf:"bytes,1,opt,name=data_token,json=dataToken,proto3" json:"data_token,omitempty"`
	// Information, help, or warnings related to the request
	RequestDetails *RequestDetails `protobuf:"bytes,2,opt,name=request_details,json=requestDetails,proto3" json:"request_details,omitempty"`
}

func (x *GetDataTokenResponse) Reset() {
	*x = GetDataTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kaskada_kaskada_v1alpha_data_token_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataTokenResponse) ProtoMessage() {}

func (x *GetDataTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kaskada_kaskada_v1alpha_data_token_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataTokenResponse.ProtoReflect.Descriptor instead.
func (*GetDataTokenResponse) Descriptor() ([]byte, []int) {
	return file_kaskada_kaskada_v1alpha_data_token_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetDataTokenResponse) GetDataToken() *DataToken {
	if x != nil {
		return x.DataToken
	}
	return nil
}

func (x *GetDataTokenResponse) GetRequestDetails() *RequestDetails {
	if x != nil {
		return x.RequestDetails
	}
	return nil
}

var File_kaskada_kaskada_v1alpha_data_token_service_proto protoreflect.FileDescriptor

var file_kaskada_kaskada_v1alpha_data_token_service_proto_rawDesc = []byte{
	0x0a, 0x30, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x2f, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64,
	0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x17, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x2e, 0x6b, 0x61, 0x73, 0x6b,
	0x61, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x6b, 0x61, 0x73,
	0x6b, 0x61, 0x64, 0x61, 0x2f, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x9b, 0x02, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x27, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x61, 0x0a, 0x0e, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x2e, 0x6b, 0x61, 0x73, 0x6b, 0x61,
	0x64, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0d, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x40, 0x0a,
	0x12, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x39, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64,
	0x61, 0x2e, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x50, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x2e, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64,
	0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x32, 0xb0, 0x01, 0x0a, 0x10, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9b, 0x01,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2c,
	0x2e, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x2e, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6b,
	0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x2e, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x42, 0x81, 0x02, 0x0a, 0x1b,
	0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x2e, 0x6b, 0x61, 0x73, 0x6b,
	0x61, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x42, 0x15, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x2f, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61,
	0x2d, 0x61, 0x69, 0x2f, 0x77, 0x72, 0x65, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6b, 0x61, 0x73,
	0x6b, 0x61, 0x64, 0x61, 0x2f, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x3b, 0x6b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0xa2, 0x02, 0x03, 0x4b, 0x4b, 0x58, 0xaa, 0x02, 0x17, 0x4b, 0x61, 0x73, 0x6b,
	0x61, 0x64, 0x61, 0x2e, 0x4b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x2e, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0xca, 0x02, 0x17, 0x4b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x5c, 0x4b, 0x61,
	0x73, 0x6b, 0x61, 0x64, 0x61, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xe2, 0x02, 0x23,
	0x4b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x5c, 0x4b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x5c,
	0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x19, 0x4b, 0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x3a, 0x3a, 0x4b,
	0x61, 0x73, 0x6b, 0x61, 0x64, 0x61, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kaskada_kaskada_v1alpha_data_token_service_proto_rawDescOnce sync.Once
	file_kaskada_kaskada_v1alpha_data_token_service_proto_rawDescData = file_kaskada_kaskada_v1alpha_data_token_service_proto_rawDesc
)

func file_kaskada_kaskada_v1alpha_data_token_service_proto_rawDescGZIP() []byte {
	file_kaskada_kaskada_v1alpha_data_token_service_proto_rawDescOnce.Do(func() {
		file_kaskada_kaskada_v1alpha_data_token_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_kaskada_kaskada_v1alpha_data_token_service_proto_rawDescData)
	})
	return file_kaskada_kaskada_v1alpha_data_token_service_proto_rawDescData
}

var file_kaskada_kaskada_v1alpha_data_token_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_kaskada_kaskada_v1alpha_data_token_service_proto_goTypes = []interface{}{
	(*DataToken)(nil),             // 0: kaskada.kaskada.v1alpha.DataToken
	(*GetDataTokenRequest)(nil),   // 1: kaskada.kaskada.v1alpha.GetDataTokenRequest
	(*GetDataTokenResponse)(nil),  // 2: kaskada.kaskada.v1alpha.GetDataTokenResponse
	nil,                           // 3: kaskada.kaskada.v1alpha.DataToken.TableVersionsEntry
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*RequestDetails)(nil),        // 5: kaskada.kaskada.v1alpha.RequestDetails
}
var file_kaskada_kaskada_v1alpha_data_token_service_proto_depIdxs = []int32{
	3, // 0: kaskada.kaskada.v1alpha.DataToken.table_versions:type_name -> kaskada.kaskada.v1alpha.DataToken.TableVersionsEntry
	4, // 1: kaskada.kaskada.v1alpha.DataToken.create_time:type_name -> google.protobuf.Timestamp
	0, // 2: kaskada.kaskada.v1alpha.GetDataTokenResponse.data_token:type_name -> kaskada.kaskada.v1alpha.DataToken
	5, // 3: kaskada.kaskada.v1alpha.GetDataTokenResponse.request_details:type_name -> kaskada.kaskada.v1alpha.RequestDetails
	1, // 4: kaskada.kaskada.v1alpha.DataTokenService.GetDataToken:input_type -> kaskada.kaskada.v1alpha.GetDataTokenRequest
	2, // 5: kaskada.kaskada.v1alpha.DataTokenService.GetDataToken:output_type -> kaskada.kaskada.v1alpha.GetDataTokenResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_kaskada_kaskada_v1alpha_data_token_service_proto_init() }
func file_kaskada_kaskada_v1alpha_data_token_service_proto_init() {
	if File_kaskada_kaskada_v1alpha_data_token_service_proto != nil {
		return
	}
	file_kaskada_kaskada_v1alpha_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kaskada_kaskada_v1alpha_data_token_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kaskada_kaskada_v1alpha_data_token_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kaskada_kaskada_v1alpha_data_token_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kaskada_kaskada_v1alpha_data_token_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kaskada_kaskada_v1alpha_data_token_service_proto_goTypes,
		DependencyIndexes: file_kaskada_kaskada_v1alpha_data_token_service_proto_depIdxs,
		MessageInfos:      file_kaskada_kaskada_v1alpha_data_token_service_proto_msgTypes,
	}.Build()
	File_kaskada_kaskada_v1alpha_data_token_service_proto = out.File
	file_kaskada_kaskada_v1alpha_data_token_service_proto_rawDesc = nil
	file_kaskada_kaskada_v1alpha_data_token_service_proto_goTypes = nil
	file_kaskada_kaskada_v1alpha_data_token_service_proto_depIdxs = nil
}
