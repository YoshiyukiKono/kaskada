on:
  workflow_call:
  workflow_dispatch:

permissions:
  # For deploying release artifacts.
  contents: write
  pull-requests: read
  # For pushing Docker images to ghcr.io.
  packages: write
  # For creating the release announcement.
  discussions: write

env:
  IMAGE: ghcr.io/${{ github.repository_owner }}/go-cross-compile-to-arm64

name: Build linux/aarch64

jobs:
  build_cross_docker_image:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@master

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.go_cross_amd64_to_arm64
          push: true
          tags: ${{ env.IMAGE }}:v_${{ github.GITHUB_REF_NAME }}_${{ github.GITHUB_SHA }}v
          labels: |
            org.opencontainers.image.title=kaskada go cross compilation image
            org.opencontainers.image.description=The kaskada go cross compilation image
            org.opencontainers.image.url=${{ github.repositoryUrl }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.version=${{  github.GITHUB_SHA }}
            org.opencontainers.image.created=${{ steps.current_date.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=Apache-2.0

      - name: Output Docker Container Name
        id: docker-container-name
        run: |
          echo "${{ env.IMAGE }}:v_${{ github.GITHUB_REF_NAME }}_${{ github.GITHUB_SHA}}v"

  # test_mount_points:
  #   runs-on: ubuntu-20.04
  #   # container:
  #   # image: ubuntu:20.04
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@master

  #     - name: Mount points test
  #       shell: bash
  #       run: |
  #         pwd
  #         ls
  #         docker run --entrypoint="/bin/ls" ubuntu:20.04

  # sparrow_cross_amd64_arm64:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@master

  #     - name: Current Date
  #       id: current_date
  #       run: |
  #         echo "created=$(date -u +"%Y-%m-%d %H:%M:%S%z")" | tee -a "$GITHUB_OUTPUT"
  #       shell: bash

  #     - name: Install stable toolchain
  #       id: toolchain
  #       uses: dtolnay/rust-toolchain@master
  #       with:
  #         toolchain: stable
  #         components: clippy
  #         targets: aarch64-unknown-linux-gnu

  #     - name: Apt Packages (Linux)
  #       uses: awalsh128/cache-apt-pkgs-action@latest
  #       with:
  #         packages: lld
  #         version: 1.0

  #     - name: Install Protoc
  #       uses: arduino/setup-protoc@v1
  #       with:
  #         repo-token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Install cross
  #       shell: bash
  #       run: cargo install cross

  #     - name: Sparrow - cross build (Release)
  #       shell: bash
  #       run: |
  #         cross  build --release --all-features --target aarch64-unknown-linux-gnu -p sparrow-main

  #     - name: Upload engine artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: engine-linux-aarch64
  #         retention-days: 5
  #         path: |
  #           target/aarch64-unknown-linux-gnu/release/sparrow-main
